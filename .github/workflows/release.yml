name: Build and Release SharpHunter

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:  # Add manual trigger option

permissions:
  contents: write

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Needed for tag operations

      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v1.1

      # Verify Hunter.ico exists
      - name: Verify Icon Path
        shell: powershell
        run: |
          $iconPath = "${{ github.workspace }}/SharpHunter/Hunter.ico"
          if (-Not (Test-Path -Path $iconPath)) {
            Write-Error "Icon file not found at $iconPath"
            exit 1
          }
          Write-Output "Icon file exists at $iconPath"

      # Compile project with icon
      - name: Compile with Icon
        working-directory: SharpHunter
        run: |
          msbuild SharpHunter.sln /p:Configuration=Release /p:ApplicationIcon="Hunter.ico"

      # Verify build output
      - name: Verify Build Output
        working-directory: SharpHunter
        shell: powershell
        run: |
          $exePath = "bin/Release/SharpHunter.exe"
          if (-Not (Test-Path -Path $exePath)) {
            Write-Error "Build output $exePath not found."
            exit 1
          }
          Write-Output "$exePath found successfully."

      # Copy exe to BOF directory
      - name: Copy exe to BOF folder
        working-directory: SharpHunter
        shell: powershell
        run: |
          Copy-Item -Path "bin/Release/SharpHunter.exe" -Destination "BOF" -Force
          Write-Output "SharpHunter.exe copied to BOF folder."

      # Install 7-Zip module
      - name: Install 7-Zip PowerShell Module
        shell: powershell
        run: |
          Install-Module 7Zip4PowerShell -Force -Verbose

      # Create ZIP artifact
      - name: Build Artifact (ZIP)
        working-directory: SharpHunter
        shell: powershell
        run: |
          $outputZip = "${{ github.workspace }}/SharpHunterBOF.zip"
          if (Test-Path -Path $outputZip) {
            Remove-Item -Path $outputZip -Force
            Write-Output "Old zip file removed."
          }
          Compress-7Zip -Path "BOF" -ArchiveFileName $outputZip -Format Zip
          Write-Output "Artifact created at $outputZip"

      # Create GitHub Release
      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: "SharpHunter ${{ github.ref_name }}"
          body: "Automated build and release of SharpHunter."
          draft: false
          prerelease: false

      # Update latest tag
      - name: Update latest tag
        if: startsWith(github.ref_name, 'v')  # Only run for version tags
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git tag -f latest
          git push origin :latest || true  # Force delete existing latest tag
          git push origin latest

      # Upload EXE to release
      - name: Upload EXE to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: SharpHunter/bin/Release/SharpHunter.exe
          asset_name: SharpHunter.exe
          asset_content_type: application/octet-stream

      # Upload ZIP to release
      - name: Upload ZIP to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: SharpHunterBOF.zip
          asset_name: SharpHunterBOF.zip
          asset_content_type: application/zip
